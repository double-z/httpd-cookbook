# Generated by Chef.
#
# This is the main Apache server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.httpd.org/docs/2.2/> for detailed information.
# In particular, see
# <URL:http://httpd.httpd.org/docs/2.2/mod/directives.html>
# for a discussion of each configuration directive.
#
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.
#
# The configuration directives are grouped into three basic sections:
#  1. Directives that control the operation of the Apache server process as a
#     whole (the 'global environment').
#  2. Directives that define the parameters of the 'main' or 'default' server,
#     which responds to requests that aren't handled by a virtual host.
#     These directives also provide default values for the settings
#     of all virtual hosts.
#  3. Settings for virtual hosts, which allow Web requests to be sent to
#     different IP addresses or hostnames and have them handled by the
#     same Apache server process.
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so "logs/foo.log"
# with ServerRoot set to "/etc/httpd" will be interpreted by the
# server as "/etc/httpd/logs/foo.log".
#

#=============================================
# GLOBAL SERVER SETTINGS
#=============================================

### Section 1: Global Environment
#
# The directives in this section affect the overall operation of Apache,
# such as the number of concurrent requests it can handle or where it
# can find its configuration files.
#

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# NOTE!  If you intend to place this on an NFS (or otherwise network)
# mounted filesystem then please read the LockFile documentation
# (available at <URL:http://httpd.httpd.org/docs/2.2/mod/mpm_common.html#lockfile>);
# you will save yourself a lot of trouble.
#
# Do NOT add a slash at the end of the directory path.
#
<% unless @root_dir.nil? || @root_dir.empty? %>
ServerRoot <%= @root_dir %>
<% else -%>
ServerRoot /etc/httpd
<% end -%>

#
# The accept serialization lock file MUST BE STORED ON A LOCAL DISK.
#
<% unless @lockfile.nil? || @lockfile.empty? %>
LockFile <%= @lockfile %>
<% else -%>
LockFile /var/lock/httpd/accept.lock
<% end -%>

#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.  e.g. admin@your-domain.com
#
<% unless @serveradmin.nil? || @serveradmin.empty? %>
ServerAdmin <%= @serveradmin %>
<% else -%>
ServerAdmin root@localhost
<% end -%>

#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If this is not set to valid DNS name for your host, server-generated
# redirections will not work.  See also the UseCanonicalName directive.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
# You will have to access it by its address anyway, and this will make
# redirections work in a sensible way.
#
#ServerName www.example.com:80
#
<% unless @servername.nil? || @servername.empty? %>
ServerName <%= @servername %>
<% else -%>
Servername localhost.localdomain
<% end -%>

#
# HostnameLookups: Log the names of clients or just their IP addresses
# e.g., www.apache.org (on) or 204.62.129.132 (off).
# The default is off because it'd be overall better for the net if people
# had to knowingly turn this feature on, since enabling it means that
# each client request will result in AT LEAST one lookup request to the
# nameserver.
#
HostnameLookups Off

#
# UseCanonicalName: Determines how Apache constructs self-referencing
# URLs and the SERVER_NAME and SERVER_PORT variables.
# When set "Off", Apache will use the Hostname and Port supplied
# by the client.  When set "On", Apache will use the value of the
# ServerName directive.
#
<% unless @usecanonicalname.nil? || @usecanonicalname.empty? %>
UseCanonicalName <%= @usecanonicalname %>
<% else -%>
UseCanonicalName On
<% end -%>

# ServerTokens
# This directive configures what you return as the Server HTTP response
# Header. The default is 'Full' which sends information about the OS-Type
# and compiled in modules.
# Set to one of:  Full | OS | Minor | Minimal | Major | Prod
# where Full conveys the most information, and Prod the least.
#
#
# Don't give away too much information about all the subcomponents
# we are running.  Comment out this line if you don't mind remote sites
# finding out what major optional modules you are running
#
<% unless @servertokens.nil? || @servertokens.empty? %>
ServerTokens <%= @servertokens %>
<% else -%>
ServerTokens Prod
<% end -%>

#
# The default TraceEnable on permits TRACE requests per RFC 2616,
# which disallows any request body to accompany the request.
# TraceEnable off causes the core server
# to return a 405 (Method not allowed) error to the client.
#
<% unless @traceenable.nil? || @traceenable.empty?%>
TraceEnable <%= @traceenable %>
<% else -%>
TraceEnable Off
<% end -%>

#
# Optionally add a line containing the server version and virtual host
# name to server-generated pages (internal error documents, FTP directory
# listings, mod_status and mod_info output etc., but not CGI generated
# documents or custom error documents).
# Set to "EMail" to also include a mailto: link to the ServerAdmin.
# Set to one of:  On | Off | EMail
#
<% unless @serversignature.nil? || @serversignature.empty? %>
ServerSignature  <%= @serversignature %>
<% else -%>
ServerSignature  Prod
<% end -%>

#
# PidFile: The file in which the server should record its process
# identification number when it starts.
#
<% unless @pidfile.nil? || @pidfile.empty? %>
PidFile <%= @pidfile %>
<% else -%>
PidFile run/httpd.pid
<% end -%>

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, in addition to the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on specific IP addresses as shown below to
# prevent Apache from glomming onto all bound IP addresses (0.0.0.0)
#
#Example: Listen 12.34.56.78:80
#
<% @httpd_listen_ports.each do |port| -%>
Listen <%= port %>
<% end -%>

#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.
#
# User/Group: The name (or #number) of the user/group to run httpd as.
#  . On SCO (ODT 3) use "User nouser" and "Group nogroup".
#  . On HPUX you may not be able to use shared memory as nobody, and the
#    suggested workaround is to create a user www and use that user.
#  NOTE that some kernels refuse to setgid(Group) or semctl(IPC_SET)
#  when the value of (unsigned)Group is above 60000;
#  don't use Group #-1 on these systems!
#
User <%= @process_user %>
Group <%= @process_group %>

<% unless @directoryindex.nil? || @directoryindex.empty? %>
# Define the default file served
DirectoryIndex <%= @directoryindex %>
<% end -%>

#
# Each directory to which Apache has access can be configured with respect
# to which services and features are allowed and/or disabled in that
# directory (and its subdirectories).
#
# First, we configure the "default" to be a very restrictive set of
# features.
#

# The authz_host_module is required for these settings
#LoadModule authz_host_module modules/mod_authz_host.so

<Directory />
Options FollowSymLinks
AllowOverride None
Order Allow,Deny
Deny from all
</Directory>

# Protect hidden files from being viewed
<Files .*>
        Order Deny,Allow
        Deny From All
</Files>

#=============================================
# PERFORMANCE RELATED SETTINGS
#=============================================

#
# Timeout: The number of seconds before receives and sends time out.
#
Timeout <%= @http_timeout %>

#
# KeepAlive: Whether or not to allow persistent connections (more than
# one request per connection). Set to "Off" to deactivate.
#
KeepAlive <%= @keepalive %>

#
# MaxKeepAliveRequests: The maximum number of requests to allow
# during a persistent connection. Set to 0 to allow an unlimited amount.
# We recommend you leave this number high, for maximum performance.
#
MaxKeepAliveRequests <%= @maxkeepaliverequests %>

#
# KeepAliveTimeout: Number of seconds to wait for the next request from the
# same client on the same connection.
#
KeepAliveTimeout <%= @keepalivetimeout %>

<% unless @directoryindex.nil? || @directoryindex.empty? %>
# Define the default file served
<IfModule mod_dir.c>
  DirectoryIndex <%= @directoryindex %>
</IfModule>
<% end -%>

#
# Server-Pool Size Regulation (MPM specific)
#

<%- unless @mpm_type == "worker" %>

#
# prefork MPM
# StartServers: number of server processes to start
# MinSpareServers: minimum number of server processes which are kept spare
# MaxSpareServers: maximum number of server processes which are kept spare
# ServerLimit: maximum value for MaxClients for the lifetime of the server
# MaxClients: maximum number of server processes allowed to start
# MaxRequestsPerChild: maximum number of requests a server process serves
#
StartServers          <%= @prefork_startservers || node[:httpd][:prefork][:startservers] %>
MinSpareServers       <%= @prefork_minspareservers || node[:httpd][:prefork][:minspareservers] %>
MaxSpareServers       <%= @prefork_maxspareservers || node[:httpd][:prefork][:maxspareservers] %>
ServerLimit           <%= @prefork_serverlimit || node[:httpd][:prefork][:serverlimit] %>
MaxClients            <%= @prefork_maxclients || node[:httpd][:prefork][:maxclients] %>
MaxRequestsPerChild   <%= @prefork_maxrequestsperchild || node[:httpd][:prefork][:maxrequestsperchild] %>

<% else -%>
#
# worker MPM
# StartServers: initial number of server processes to start
# MaxClients: maximum number of simultaneous client connections
# MinSpareThreads: minimum number of worker threads which are kept spare
# MaxSpareThreads: maximum number of worker threads which are kept spare
# ThreadsPerChild: constant number of worker threads in each server process
# MaxRequestsPerChild: maximum number of requests a server process serves
#
StartServers          <%= node[:httpd][:worker][:startservers] %>
MaxClients            <%= node[:httpd][:worker][:maxclients] %>
MinSpareThreads       <%= node[:httpd][:worker][:minsparethreads] %>
MaxSpareThreads       <%= node[:httpd][:worker][:maxsparethreads] %>
ThreadsPerChild       <%= node[:httpd][:worker][:threadsperchild] %>
MaxRequestsPerChild   <%= node[:httpd][:worker][:maxrequestsperchild] %>

<% end -%>

#=============================================
# LOGGING RELATED SETTINGS
#=============================================

#
# The log_config_module is required for these settings
#
#LoadModule log_config_module modules/mod_log_config.so

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
<% unless @error_log.nil? || @error_log.empty? %>
  ErrorLog <%= node[:httpd][:base][:log_dir] %>/<%= @error_log %>
<% else -%>
  ErrorLog <%= node[:httpd][:base][:log_dir] %>/server_error.log
<% end -%>

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
<% unless @loglevel.nil? || @loglevel.empty? %>
  LogLevel <%= @loglevel %>
<% else -%>
  LogLevel warn
<% end -%>

#=============================================
# MIME AND GENERAL CONTENT HANDLING SETTINGS
#=============================================

#
# The settings here basically define conventional content handling definitions.
# This convention can be overridden in later settings if desired.
#
# The specific content types for PHP and SSL are configured later in
# their respective conf files
#

#
# The mime_module is required for these settings
#
#LoadModule mime_module modules/mod_mime.so
#LoadModule negotiation_module modules/mod_negotiation.so

#
# TypesConfig points to the file containing the list of mappings from
# filename extension to MIME-type. These generally suffice unless you want to
# override the convention, as we do with css and .js
#
<% unless @typesconfig.nil? || @typesconfig.empty? %>
TypesConfig <%= @typesconfig %>
<% else -%>
TypesConfig /etc/mime.types
<% end -%>

#
# AddType allows you to add to or override the MIME configuration
# file mime.types for specific file types.
#
AddType application/x-gzip .tgz

#
# AddEncoding allows you to have certain browsers uncompress
# information on the fly. Note: Not all browsers support this.
# Despite the name similarity, the following Add* directives have
# nothing to do with the FancyIndexing customization directives above.
#
AddEncoding x-compress .Z
AddEncoding x-gzip .gz .tgz
AddEncoding x-bzip2 .bz2

